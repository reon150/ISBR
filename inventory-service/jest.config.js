module.exports = {
  preset: 'ts-jest',
  testEnvironment: 'node',
  setupFilesAfterEnv: ['<rootDir>/test/setup.ts'],
  testMatch: ['<rootDir>/test/**/*.spec.ts'],
  moduleFileExtensions: ['ts', 'tsx', 'js', 'jsx', 'json', 'node'],
  transform: {
    '^.+\\.(ts|tsx)$': [
      'ts-jest',
      {
        useESM: false,
        tsconfig: {
          module: 'commonjs',
          target: 'es2020',
          lib: ['es2020'],
          allowJs: true,
          skipLibCheck: true,
          strict: false,
          forceConsistentCasingInFileNames: true,
          noImplicitAny: false,
          strictNullChecks: false,
          strictPropertyInitialization: false,
          strictBindCallApply: false,
          noFallthroughCasesInSwitch: false,
          moduleResolution: 'node',
          resolveJsonModule: true,
          isolatedModules: true,
          noEmit: true,
          esModuleInterop: true,
          experimentalDecorators: true,
          emitDecoratorMetadata: true,
          baseUrl: './',
          paths: {
            '@domain/*': ['src/domain/*'],
            '@application/*': ['src/application/*'],
            '@infrastructure/*': ['src/infrastructure/*'],
            '@presentation/*': ['src/presentation/*'],
          },
        },
      },
    ],
  },
  collectCoverageFrom: [
    'src/**/*.(t|j)s',
    '!src/**/*.module.ts',
    '!src/**/*.interface.ts',
    '!src/**/index.ts',
    '!src/**/*.dto.ts',
    '!src/**/*.entity.ts',
    '!src/**/*.enum.ts',
    '!src/**/*.constants.ts',
    '!src/**/*.decorator.ts',
    '!src/**/*.guard.ts',
    '!src/**/*.strategy.ts',
    '!src/**/*.filter.ts',
    '!src/**/*.middleware.ts',
    '!src/**/*.pipe.ts',
    '!src/**/*.interceptor.ts',
    '!src/**/*.exception.ts',
    '!src/**/*.exception.filter.ts',
    '!src/**/*.gateway.ts',
    '!src/**/*.resolver.ts',
    '!src/main.ts',
    '!src/infrastructure/database/migrations/**',
    '!src/infrastructure/database/seeds/**',
    '!src/infrastructure/database/data-source.ts',
    '!src/infrastructure/database/seed.ts',
    '!src/infrastructure/messaging/kafka-topics.ts',
    '!src/infrastructure/cache/cache-keys.ts',
    '!src/infrastructure/cache/redis.store.ts',
    '!src/domain/events/**',
    '!src/types/**',
  ],
  coverageDirectory: './coverage',
  moduleNameMapper: {
    '^@domain/(.*)$': '<rootDir>/src/domain/$1',
    '^@application/(.*)$': '<rootDir>/src/application/$1',
    '^@infrastructure/(.*)$': '<rootDir>/src/infrastructure/$1',
    '^@presentation/(.*)$': '<rootDir>/src/presentation/$1',
    '^@test-mocks/(.*)$': '<rootDir>/test/mocks/$1',
  },
  roots: ['<rootDir>/src', '<rootDir>/test'],
  testPathIgnorePatterns: ['/node_modules/', '/dist/'],
  extensionsToTreatAsEsm: ['.ts'],
};
